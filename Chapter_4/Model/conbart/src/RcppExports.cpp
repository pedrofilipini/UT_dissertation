// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// bcfCore
List bcfCore(arma::vec y_, NumericVector z_, NumericVector z_est_, NumericVector tvar_con_, NumericVector tvar_mod_, NumericVector tvar_con_est_, NumericVector tvar_mod_est_, arma::mat Omega_con, arma::mat Omega_mod, arma::mat Omega_con_est, arma::mat Omega_mod_est, NumericVector x_con_, NumericVector x_mod_, NumericVector x_con_est_, NumericVector x_mod_est_, arma::mat Phi_con, arma::mat Phi_mod, arma::mat Phi_con_est, arma::mat Phi_mod_est, double l_con, double l_mod, double L, size_t j_con_, size_t j_mod_, NumericVector lvec_con_, NumericVector cvec_con_, NumericVector lvec_mod_, NumericVector cvec_mod_, List x_con_info_list, List x_mod_info_list, arma::mat random_des, arma::mat random_var, arma::mat random_var_ix, double random_var_df, arma::vec randeff_scales, NumericVector lprior_con_, NumericVector lprior_mod_, int burn, int nd, int thin, int ntree_mod, int ntree_con, double lambda, double nu, arma::mat Sigma0_con, arma::mat Sigma0_mod, double con_alpha, double con_beta, double mod_alpha, double mod_beta, CharacterVector treef_name_, bool prior_sample, bool use_con_scale, bool use_mod_scale, double con_scale_df, double mod_scale_df, int status_interval, bool vanilla, bool dart, NumericVector var_sizes_con, NumericVector var_sizes_mod, NumericVector lower_bd, NumericVector upper_bd, bool probit);
RcppExport SEXP _conbart_bcfCore(SEXP y_SEXP, SEXP z_SEXP, SEXP z_est_SEXP, SEXP tvar_con_SEXP, SEXP tvar_mod_SEXP, SEXP tvar_con_est_SEXP, SEXP tvar_mod_est_SEXP, SEXP Omega_conSEXP, SEXP Omega_modSEXP, SEXP Omega_con_estSEXP, SEXP Omega_mod_estSEXP, SEXP x_con_SEXP, SEXP x_mod_SEXP, SEXP x_con_est_SEXP, SEXP x_mod_est_SEXP, SEXP Phi_conSEXP, SEXP Phi_modSEXP, SEXP Phi_con_estSEXP, SEXP Phi_mod_estSEXP, SEXP l_conSEXP, SEXP l_modSEXP, SEXP LSEXP, SEXP j_con_SEXP, SEXP j_mod_SEXP, SEXP lvec_con_SEXP, SEXP cvec_con_SEXP, SEXP lvec_mod_SEXP, SEXP cvec_mod_SEXP, SEXP x_con_info_listSEXP, SEXP x_mod_info_listSEXP, SEXP random_desSEXP, SEXP random_varSEXP, SEXP random_var_ixSEXP, SEXP random_var_dfSEXP, SEXP randeff_scalesSEXP, SEXP lprior_con_SEXP, SEXP lprior_mod_SEXP, SEXP burnSEXP, SEXP ndSEXP, SEXP thinSEXP, SEXP ntree_modSEXP, SEXP ntree_conSEXP, SEXP lambdaSEXP, SEXP nuSEXP, SEXP Sigma0_conSEXP, SEXP Sigma0_modSEXP, SEXP con_alphaSEXP, SEXP con_betaSEXP, SEXP mod_alphaSEXP, SEXP mod_betaSEXP, SEXP treef_name_SEXP, SEXP prior_sampleSEXP, SEXP use_con_scaleSEXP, SEXP use_mod_scaleSEXP, SEXP con_scale_dfSEXP, SEXP mod_scale_dfSEXP, SEXP status_intervalSEXP, SEXP vanillaSEXP, SEXP dartSEXP, SEXP var_sizes_conSEXP, SEXP var_sizes_modSEXP, SEXP lower_bdSEXP, SEXP upper_bdSEXP, SEXP probitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y_(y_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z_(z_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z_est_(z_est_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tvar_con_(tvar_con_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tvar_mod_(tvar_mod_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tvar_con_est_(tvar_con_est_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tvar_mod_est_(tvar_mod_est_SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega_con(Omega_conSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega_mod(Omega_modSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega_con_est(Omega_con_estSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega_mod_est(Omega_mod_estSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x_con_(x_con_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x_mod_(x_mod_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x_con_est_(x_con_est_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x_mod_est_(x_mod_est_SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Phi_con(Phi_conSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Phi_mod(Phi_modSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Phi_con_est(Phi_con_estSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Phi_mod_est(Phi_mod_estSEXP);
    Rcpp::traits::input_parameter< double >::type l_con(l_conSEXP);
    Rcpp::traits::input_parameter< double >::type l_mod(l_modSEXP);
    Rcpp::traits::input_parameter< double >::type L(LSEXP);
    Rcpp::traits::input_parameter< size_t >::type j_con_(j_con_SEXP);
    Rcpp::traits::input_parameter< size_t >::type j_mod_(j_mod_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lvec_con_(lvec_con_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cvec_con_(cvec_con_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lvec_mod_(lvec_mod_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cvec_mod_(cvec_mod_SEXP);
    Rcpp::traits::input_parameter< List >::type x_con_info_list(x_con_info_listSEXP);
    Rcpp::traits::input_parameter< List >::type x_mod_info_list(x_mod_info_listSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type random_des(random_desSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type random_var(random_varSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type random_var_ix(random_var_ixSEXP);
    Rcpp::traits::input_parameter< double >::type random_var_df(random_var_dfSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type randeff_scales(randeff_scalesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lprior_con_(lprior_con_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lprior_mod_(lprior_mod_SEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type nd(ndSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< int >::type ntree_mod(ntree_modSEXP);
    Rcpp::traits::input_parameter< int >::type ntree_con(ntree_conSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma0_con(Sigma0_conSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma0_mod(Sigma0_modSEXP);
    Rcpp::traits::input_parameter< double >::type con_alpha(con_alphaSEXP);
    Rcpp::traits::input_parameter< double >::type con_beta(con_betaSEXP);
    Rcpp::traits::input_parameter< double >::type mod_alpha(mod_alphaSEXP);
    Rcpp::traits::input_parameter< double >::type mod_beta(mod_betaSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type treef_name_(treef_name_SEXP);
    Rcpp::traits::input_parameter< bool >::type prior_sample(prior_sampleSEXP);
    Rcpp::traits::input_parameter< bool >::type use_con_scale(use_con_scaleSEXP);
    Rcpp::traits::input_parameter< bool >::type use_mod_scale(use_mod_scaleSEXP);
    Rcpp::traits::input_parameter< double >::type con_scale_df(con_scale_dfSEXP);
    Rcpp::traits::input_parameter< double >::type mod_scale_df(mod_scale_dfSEXP);
    Rcpp::traits::input_parameter< int >::type status_interval(status_intervalSEXP);
    Rcpp::traits::input_parameter< bool >::type vanilla(vanillaSEXP);
    Rcpp::traits::input_parameter< bool >::type dart(dartSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type var_sizes_con(var_sizes_conSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type var_sizes_mod(var_sizes_modSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lower_bd(lower_bdSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type upper_bd(upper_bdSEXP);
    Rcpp::traits::input_parameter< bool >::type probit(probitSEXP);
    rcpp_result_gen = Rcpp::wrap(bcfCore(y_, z_, z_est_, tvar_con_, tvar_mod_, tvar_con_est_, tvar_mod_est_, Omega_con, Omega_mod, Omega_con_est, Omega_mod_est, x_con_, x_mod_, x_con_est_, x_mod_est_, Phi_con, Phi_mod, Phi_con_est, Phi_mod_est, l_con, l_mod, L, j_con_, j_mod_, lvec_con_, cvec_con_, lvec_mod_, cvec_mod_, x_con_info_list, x_mod_info_list, random_des, random_var, random_var_ix, random_var_df, randeff_scales, lprior_con_, lprior_mod_, burn, nd, thin, ntree_mod, ntree_con, lambda, nu, Sigma0_con, Sigma0_mod, con_alpha, con_beta, mod_alpha, mod_beta, treef_name_, prior_sample, use_con_scale, use_mod_scale, con_scale_df, mod_scale_df, status_interval, vanilla, dart, var_sizes_con, var_sizes_mod, lower_bd, upper_bd, probit));
    return rcpp_result_gen;
END_RCPP
}
// cSelect
List cSelect(NumericVector x_, NumericVector y_, double c_max, double value);
RcppExport SEXP _conbart_cSelect(SEXP x_SEXP, SEXP y_SEXP, SEXP c_maxSEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x_(x_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_(y_SEXP);
    Rcpp::traits::input_parameter< double >::type c_max(c_maxSEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    rcpp_result_gen = Rcpp::wrap(cSelect(x_, y_, c_max, value));
    return rcpp_result_gen;
END_RCPP
}
// gpCore
List gpCore(arma::vec y_, arma::mat Omega_con, arma::mat Phi_con, double l_con, double L, int burn, int nd, int thin, double nu, double lambda, arma::mat Sigma0_con);
RcppExport SEXP _conbart_gpCore(SEXP y_SEXP, SEXP Omega_conSEXP, SEXP Phi_conSEXP, SEXP l_conSEXP, SEXP LSEXP, SEXP burnSEXP, SEXP ndSEXP, SEXP thinSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP Sigma0_conSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y_(y_SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega_con(Omega_conSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Phi_con(Phi_conSEXP);
    Rcpp::traits::input_parameter< double >::type l_con(l_conSEXP);
    Rcpp::traits::input_parameter< double >::type L(LSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type nd(ndSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma0_con(Sigma0_conSEXP);
    rcpp_result_gen = Rcpp::wrap(gpCore(y_, Omega_con, Phi_con, l_con, L, burn, nd, thin, nu, lambda, Sigma0_con));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_conbart_bcfCore", (DL_FUNC) &_conbart_bcfCore, 64},
    {"_conbart_cSelect", (DL_FUNC) &_conbart_cSelect, 4},
    {"_conbart_gpCore", (DL_FUNC) &_conbart_gpCore, 11},
    {NULL, NULL, 0}
};

RcppExport void R_init_conbart(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
